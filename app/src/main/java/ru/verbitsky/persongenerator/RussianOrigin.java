package ru.verbitsky.persongenerator;


import com.google.android.gms.common.util.ArrayUtils;

import java.util.Arrays;

/**
 * Класс, который генерирует Имя, Фамилию и Отчество для фейковых пользователей с русским происхождением
 */


public class RussianOrigin implements Origin {

    private String sex;


    private String[] FemaleLastName = {"Иванова", "Смирнова", "Кузнецова", "Соколова", "Попова", "Лебедева",
            "Козлова", "Новикова", "Морозова", "Петрова", "Волкова", "Соловьёва", "Васильева", "Зайцева",
            "Павлова", "Семёнова", "Голубева", "Виноградова", "Богданова", "Воробьева", "Фёдорова", "Михайлова",
            "Беляева", "Тарасова", "Белова", "Комарова", "Орлова", "Киселёва", "Макарова",
            "Андреева", "Ковалёва", "Ильина", "Гусева", "Титова", "Кузьмина", "Кудрявцева", "Баранова", "Куликова", "Алексеева",
            "Степанова", "Яковлева", "Сорокина",
            "Сергеева", "Романова", "Захарова", "Борисова", "Королёва", "Герасимова", "Понамарёва", "Григорьева",
            "Лазарева", "Медведева", "Ершова", "Никитина", "Соболева", "Рябова", "Полякова",
            "Цветкова", "Данилова", "Жукова", "Фролова", "Журавлёва", "Николаева", "Крылова",
            "Максимова", "Сидорова", "Осипова", "Белоусова", "Федотова", "Дорофеева", "Егорова", "Матвеева",
            "Боброва", "Дмитриева", "Калинина", "Анисимова", "Петухова", "Антонова", "Тимофеева",
            "Никифорова", "Веселова", "Филиппова", "Маркова", "Большакова", "Суханова", "Миронова",
            "Ширяева", "Александрова", "Коновалова", "Шестакова", "Казакова", "Ефимова", "Денисова",
            "Громова", "Фомина", "Давыдова", "Мельникова", "Щербакова", "Блинова", "Колесникова"};



    private String[] MaleLastName = {"Иванов", "Смирнов", "Кузнецов", "Соколов", "Попов", "Лебедев",
            "Козлов", "Новиков", "Морозов", "Петров", "Волков", "Соловьёв", "Васильев", "Зайцев",
            "Павлов", "Семёнов", "Голубев", "Виноградов", "Богданов", "Фёдоров", "Михайлов",
            "Беляев", "Тарасов", "Белов", "Комаров", "Орлов", "Киселёв", "Макаров",
            "Андреев", "Ковалёв", "Ильин", "Гусев", "Титов", "Кузьмин", "Кудрявцев", "Баранов", "Куликов", "Алексеев",
            "Степанов", "Яковлев", "Сорокин",
            "Сергеев", "Романов", "Захаров", "Борисов", "Королёв", "Герасимов", "Понамарёв", "Григорьев",
            "Лазарев", "Медведев", "Ершов", "Никитин", "Соболев", "Рябов", "Поляков",
            "Цветков", "Данилов", "Жуков", "Фролов", "Журавлёв", "Николаев", "Крылов",
            "Максимов", "Сидоров", "Осипов", "Белоусов", "Федотов", "Дорофеев", "Егоров", "Матвеев",
            "Павлов", "Семёнов", "Голубев", "Виноградов", "Богданов", "Воробьев", "Фёдоров", "Михайлов",
            "Бобров", "Дмитриев", "Калинин", "Анисимов", "Петухов", "Антонов", "Тимофеев",
            "Никифоров", "Веселов", "Филиппов", "Марков", "Большаков", "Суханов", "Миронов",
            "Ширяев", "Александров", "Коновалов", "Шестаков", "Казаков", "Ефимов", "Денисов",
            "Громов", "Фомин", "Давыдов", "Мельников", "Щербаков", "Блинов", "Колесников"};


    private String[] MaleName = {"Александр", "Алексей", "Андрей", "Антон", "Артём", "Василий",
            "Вадим", "Михаил", "Юрий", "Дмитрий", "Николай", "Глеб", "Сергей", "Олег",
            "Павел", "Семён", "Пётр", "Станислав", "Фёдор", "Степан", "Виктор", "Илья",
            "Иван", "Константин", "Игорь", "Даниил", "Георгий", "Роман", "Владислав",
            "Никита", "Евгений", "Кирилл", "Денис", "Вячеслав", "Анатолий"};

    private String[] FemaleName = {"Анастасия", "София", "Мария", "Вероника", "Полина", "Виктория", "Дарья", "Ксения",
            "Любовь", "Екатерина", "Валерия", "Алёна", "Ольга", "Алина", "Кристина", "Анна", "Елизавета", "Юлия",
            "Елена", "Ирина", "Яна", "Александра", "Татьяна", "Наталья", "Марина", "Светлана", "Олеся", "Евгения",
            "Людмила", "Лариса", "Арина", "Вера", "Галина", "Надежда", "Тамара"};

    private String[] MaleFatherName = {"Александрович", "Алексеевич", "Андреевич", "Антонович", "Артёмович", "Васильевич",
            "Вадимович", "Михайлович", "Юрьевич", "Дмитриевич", "Николаевич", "Глебович", "Сергеевич", "Олегович",
            "Павлович", "Семёнович", "Петрович", "Станиславович", "Фёдорович", "Степанович", "Викторович", "Ильич",
            "Иванович", "Константинович", "Игоревич", "Даниилович", "Георгиевич", "Романович", "Владиславович",
            "Никитич", "Евгеньевич", "Кириллович", "Денисович", "Вячеславович", "Анатольевич"};

    private String[] FemaleFatherName = {"Александровна", "Алексеевна", "Андреевна", "Антоновна", "Артёмовна", "Васильевна",
            "Вадимовна", "Михайловна", "Юрьевна", "Дмитриевна", "Николаевна", "Глебовна", "Сергеевна", "Олеговна",
            "Павловна", "Семёновна", "Петровна", "Станиславовна", "Фёдоровна", "Степан", "Викторовна", "Ильевна",
            "Ивановна", "Константиновна", "Игоревна", "Данииловна", "Георгиевна", "Романовна", "Владиславовна",
            "Никитична", "Евгеньевна", "Кирилловна", "Денисовна", "Вячеславовна", "Анатольевна", "Руслановна"};

    public RussianOrigin(String sex){

        this.sex = sex;

    }



    /**
     * @see RussianOriginEng#name()
     * @return Возвращает nameInt-тое женское отчество из массива данных отчеств
     */



    @Override
    public String name()
    {


        if(sex.equals("male")){

            return MaleName[MainActivity.nameInt];

        }else{

            return FemaleName[MainActivity.nameInt];
        }

    }

    /**
     * @see RussianOriginEng#lastName()
     * @return Возвращает lastNameInt-тое женское отчество из массива данных отчеств
     */

    @Override
    public String lastName() {


        if(sex.equals("male")) {

            return MaleLastName[MainActivity.lastNameInt];
        }else {

            return FemaleLastName[MainActivity.lastNameInt];
        }
    }


    /**
     * @see RussianOriginEng#middleName()
     * @return Возвращает fatherNameInt-тое женское отчество из массива данных отчеств
     */

    @Override
    public String middleName() {


        if(sex.equals("male")) {
            return MaleFatherName[MainActivity.fatherNameInt];
        }else{

            return FemaleFatherName[MainActivity.fatherNameInt];
        }
    }



    @Override
    public String[] allWords() {

        return ArrayUtils.concat(MaleLastName,FemaleLastName, MaleName, FemaleName, MaleFatherName, FemaleFatherName);
    }


    @Override
    public String getLocale(String s) {

        if(Arrays.asList(FemaleLastName).contains(s)){

            return  this.getClass().getName()+ " - FemaleLastName";

        }else{

            if(Arrays.asList(MaleLastName).contains(s)) {

                return this.getClass().getName()+ " - MaleLastName";
            }else{

                if(Arrays.asList(MaleName).contains(s)) {

                    return  this.getClass().getName()+" - MaleName";
                }else{

                    if(Arrays.asList(FemaleName).contains(s)){

                        return  this.getClass().getName()+" - FemaleName";

                    }else{

                        if(Arrays.asList(MaleFatherName).contains(s)){

                            return  this.getClass().getName()+" - MaleFatherName";

                        }else{

                            return  this.getClass().getName()+" - FemaleFatherName";
                        }

                    }

                }

            }
        }



    }


}